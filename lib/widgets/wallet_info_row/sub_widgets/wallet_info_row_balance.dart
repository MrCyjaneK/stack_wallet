/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:stackwallet/db/isar/main_db.dart';
import 'package:stackwallet/models/isar/models/ethereum/eth_contract.dart';
import 'package:stackwallet/themes/stack_colors.dart';
import 'package:stackwallet/utilities/amount/amount.dart';
import 'package:stackwallet/utilities/amount/amount_formatter.dart';
import 'package:stackwallet/utilities/text_styles.dart';
import 'package:stackwallet/utilities/util.dart';
import 'package:stackwallet/wallets/isar/providers/eth/token_balance_provider.dart';
import 'package:stackwallet/wallets/isar/providers/wallet_info_provider.dart';

class WalletInfoRowBalance extends ConsumerWidget {
  const WalletInfoRowBalance({
    super.key,
    required this.walletId,
    this.contractAddress,
  });

  final String walletId;
  final String? contractAddress;

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final info = ref.watch(pWalletInfo(walletId));

    final Amount totalBalance;
    EthContract? contract;
    if (contractAddress == null) {
      totalBalance = info.cachedBalance.total +
          info.cachedBalanceSecondary.total +
          info.cachedBalanceTertiary.total;

      contract = null;
    } else {
      contract = MainDB.instance.getEthContractSync(contractAddress!)!;
      totalBalance = ref
          .watch(
            pTokenBalance(
              (walletId: walletId, contractAddress: contractAddress!),
            ),
          )
          .total;
    }

    return Text(
      ref.watch(pAmountFormatter(info.coin)).format(
            totalBalance,
            ethContract: contract,
          ),
      style: Util.isDesktop
          ? STextStyles.desktopTextExtraSmall(context).copyWith(
              color: Theme.of(context).extension<StackColors>()!.textSubtitle1,
            )
          : STextStyles.itemSubtitle(context),
    );
  }
}
