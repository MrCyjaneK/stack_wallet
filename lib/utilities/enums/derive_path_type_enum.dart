/*
 * This file is part of Stack Wallet.
 *
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'package:stackwallet/models/isar/models/blockchain_data/address.dart';
import 'package:stackwallet/utilities/enums/coin_enum.dart';

enum DerivePathType {
  bip44,
  bch44,
  bip49,
  bip84,
  eth,
  eCash44,
  solana,
  bip86;

  AddressType getAddressType() {
    switch (this) {
      case DerivePathType.bip44:
      case DerivePathType.bch44:
      case DerivePathType.eCash44:
        return AddressType.p2pkh;

      case DerivePathType.bip49:
        return AddressType.p2sh;

      case DerivePathType.bip84:
        return AddressType.p2wpkh;

      case DerivePathType.eth:
        return AddressType.ethereum;

      case DerivePathType.solana:
        return AddressType.solana;

      case DerivePathType.bip86:
        return AddressType.p2tr;
    }
  }
}

extension DerivePathTypeExt on DerivePathType {
  static DerivePathType primaryFor(Coin coin) {
    switch (coin) {
      case Coin.bitcoincash:
      case Coin.bitcoincashTestnet:
      case Coin.dogecoin:
      case Coin.dogecoinTestNet:
      case Coin.firo:
      case Coin.firoTestNet:
        return DerivePathType.bip44;

      case Coin.bitcoin:
      case Coin.bitcoinTestNet:
      case Coin.litecoin:
      case Coin.litecoinTestNet:
      case Coin.namecoin:
      case Coin.particl:
      case Coin.peercoin:
      case Coin.peercoinTestNet:
        return DerivePathType.bip84;

      case Coin.eCash:
        return DerivePathType.eCash44;

      case Coin.ethereum: // TODO: do we need something here?
        return DerivePathType.eth;

      case Coin.solana:
        return DerivePathType.solana;

      case Coin.bitcoinFrost:
      case Coin.bitcoinFrostTestNet:
      case Coin.epicCash:
      case Coin.monero:
      case Coin.wownero:
      case Coin.nano:
      case Coin.banano:
      case Coin.stellar:
      case Coin.stellarTestnet:
      case Coin.tezos: // TODO: Is this true?
        throw UnsupportedError(
            "$coin does not use bitcoin style derivation paths");
    }
  }
}
